import React, { useEffect, useState } from 'react';
import { X, ExternalLink } from 'lucide-react';

interface ChangelogModalProps {
  isOpen: boolean;
  onClose: () => void;
  currentVersion: string;
}

const ChangelogModal: React.FC<ChangelogModalProps> = ({ isOpen, onClose, currentVersion }) => {
  const [changelog, setChangelog] = useState<string>('');
  const [loading, setLoading] = useState(true);

  console.log('🎬 ChangelogModal rendered with:', { isOpen, currentVersion });

  useEffect(() => {
    if (isOpen) {
      console.log('📂 Modal opened, loading changelog...');
      loadChangelog();
    }
  }, [isOpen]);

  const loadChangelog = async () => {
    setLoading(true);
    try {
      let response;
      let text = '';
      try {
        response = await fetch('/CHANGELOG.md');
        text = await response.text();
        console.log('📄 Changelog loaded from /CHANGELOG.md, length:', text.length);
      } catch (err) {
        // Electron fallback
        try {
          response = await fetch('CHANGELOG.md');
          text = await response.text();
          console.log('📄 Changelog loaded from CHANGELOG.md, length:', text.length);
        } catch (err2) {
          console.error('❌ Failed to load changelog from both paths:', err, err2);
          setChangelog('# Changelog\n\nFailed to load changelog. Please visit our GitHub releases page.');
          setLoading(false);
          return;
        }
      }

      // Extract only the current version section
      const versionRegex = new RegExp(`## \[${currentVersion}\][\s\S]*?(?=## \[|$)`, 'i');
      const match = text.match(versionRegex);

      if (match) {
        setChangelog(match[0]);
        console.log('✅ Found version section:', currentVersion);
      } else {
        // Fallback: show first version section
        const firstVersionRegex = /## \[[^\]]+\][\s\S]*?(?=## \[|$)/;
        const firstMatch = text.match(firstVersionRegex);
        setChangelog(firstMatch ? firstMatch[0] : text);
        console.log('⚠️ Version not found, using fallback');
      }
    } catch (error) {
      console.error('❌ Failed to load changelog:', error);
      setChangelog('# Changelog\n\nFailed to load changelog. Please visit our GitHub releases page.');
    } finally {
      console.log('🏁 Loading complete');
      setLoading(false);
    }
  };

  const openGitHubReleases = () => {
    const url = `https://github.com/LuqP2/Image-MetaHub/releases/tag/v${currentVersion}`;
    window.open(url, '_blank', 'noopener,noreferrer');
  };

  const renderMarkdown = (text: string) => {
    // Simple markdown rendering
    const lines = text.split('\n');
    
    // ADD TEST BANNER AT THE TOP
    const result: JSX.Element[] = [
      <div key="test-banner" style={{ 
        padding: '20px', 
        backgroundColor: '#ff0000', 
        color: '#ffffff',
        border: '5px solid yellow',
        marginBottom: '20px',
        fontSize: '24px',
        fontWeight: 'bold'
      }}>
        🔴🔴🔴 BANNER TEST - HEY LUCAS HERE 🔴🔴🔴
      </div>
    ];
    
    lines.forEach((line, index) => {
      // Headers
      if (line.startsWith('### ')) {
        result.push(<h3 key={index} className="text-lg font-semibold text-gray-200 mt-4 mb-2">{line.replace('### ', '')}</h3>);
      }
      else if (line.startsWith('## ')) {
        result.push(<h2 key={index} className="text-xl font-bold text-white mt-6 mb-4">{line.replace(/## \[([^\]]+)\].*/, '$1')}</h2>);
      }
      // List items
      else if (line.startsWith('- **')) {
        const content = line.replace(/^- \*\*([^*]+)\*\*:\s*(.*)/, '<strong>$1</strong>: $2');
        result.push(<li key={index} className="text-gray-300" dangerouslySetInnerHTML={{ __html: content }} />);
      }
      else if (line.startsWith('- ')) {
        result.push(<li key={index} className="text-gray-300">{line.replace('- ', '')}</li>);
      }
      // Empty lines
      else if (line.trim() === '') {
        result.push(<div key={index} className="h-2" />);
      }
      // Regular text
      else {
        result.push(<p key={index} className="text-gray-300 mb-2">{line}</p>);
      }
    });
    
    return result;
      // Headers
      if (line.startsWith('### ')) {
        return <h3 key={index} className="text-lg font-semibold text-gray-200 mt-4 mb-2">{line.replace('### ', '')}</h3>;
      }
      if (line.startsWith('## ')) {
        return <h2 key={index} className="text-xl font-bold text-white mt-6 mb-4">{line.replace(/## \[([^\]]+)\].*/, '$1')}</h2>;
      }
      // List items
      if (line.startsWith('- **')) {
        const content = line.replace(/^- \*\*([^*]+)\*\*:\s*(.*)/, '<strong>$1</strong>: $2');
        return <li key={index} className="text-gray-300" dangerouslySetInnerHTML={{ __html: content }} />;
      }
      if (line.startsWith('- ')) {
        return <li key={index} className="text-gray-300">{line.replace('- ', '')}</li>;
      }
      // Empty lines
      if (line.trim() === '') {
        return <div key={index} className="h-2" />;
      }
      // Regular text
      return <p key={index} className="text-gray-300 mb-2">{line}</p>;
    });
  };

  if (!isOpen) return null;

  console.log('🔍 Modal state:', { isOpen, loading, changelogLength: changelog.length });

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm" onClick={onClose}>
      <div 
        className="bg-gray-800 rounded-xl shadow-2xl w-full max-w-3xl max-h-[80vh] flex flex-col border border-gray-700"
        onClick={(e) => e.stopPropagation()}
      >
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b border-gray-700">
          <div>
            <h2 className="text-2xl font-bold text-white">What's New</h2>
            <p className="text-gray-400 text-sm mt-1">Image MetaHub v{currentVersion}</p>
          </div>
          <button
            onClick={onClose}
            className="p-2 rounded-lg hover:bg-gray-700 transition-colors text-gray-400 hover:text-white"
            title="Close"
          >
            <X size={24} />
          </button>
        </div>

        {/* Content */}
        <div className="flex-1 overflow-y-auto p-6">
          {loading ? (
            <div className="flex items-center justify-center py-12">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-accent"></div>
            </div>
          ) : (
            <>
              {console.log('🎨 Rendering banner and changelog')}
              
              {/* Changelog Content FIRST */}
              <div className="prose prose-invert prose-sm max-w-none mb-6">
                <ul className="list-disc list-inside space-y-1">
                  {renderMarkdown(changelog)}
                </ul>
              </div>

              {/* Developer Message Banner - SIMPLIFIED TEST */}
              <div style={{ 
                padding: '20px', 
                backgroundColor: '#ff0000', 
                color: '#ffffff',
                border: '5px solid yellow',
                marginTop: '20px'
              }}>
                <h1 style={{ fontSize: '32px', fontWeight: 'bold' }}>🔴 TESTING BANNER - CAN YOU SEE THIS???</h1>
                <p style={{ fontSize: '18px' }}>Hey, I'm Lucas — the guy behind Image MetaHub.</p>
                <p style={{ fontSize: '14px' }}>
                  I'm not a career coder. I've spent the last 17 years growing my company — a tourism operator I started from scratch. 
                  It was doing well until early 2025, when it shut its doors. I lost everything, except the stubborn will to build again.
                </p>
                <a 
                  href="https://ko-fi.com/lucaspierri"
                  target="_blank"
                  rel="noopener noreferrer"
                  style={{ 
                    display: 'inline-block',
                    padding: '10px 20px',
                    backgroundColor: '#0000ff',
                    color: '#ffffff',
                    marginTop: '10px',
                    textDecoration: 'none',
                    fontWeight: 'bold'
                  }}
                >
                  ☕ Support on Ko-fi
                </a>
              </div>
            </>
          )}
        </div>

        {/* Footer */}
        <div className="flex items-center justify-between p-6 border-t border-gray-700 bg-gray-900/50">
          <div className="flex flex-col gap-2">
            <button
              onClick={openGitHubReleases}
              className="flex items-center gap-2 text-sm text-gray-400 hover:text-accent transition-colors"
            >
              <ExternalLink size={16} />
              View Full Release Notes
            </button>
            <a
              href="https://www.imagemetahub.com"
              target="_blank"
              rel="noopener noreferrer"
              className="flex items-center gap-2 text-sm text-purple-400 hover:text-purple-300 transition-colors"
            >
              <ExternalLink size={16} />
              A message from the dev
            </a>
          </div>
          <button
            onClick={onClose}
            className="px-4 py-2 bg-accent hover:bg-blue-700 text-white rounded-lg transition-colors"
          >
            Got it!
          </button>
        </div>
      </div>
    </div>
  );
};

export default ChangelogModal;
